(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{vlBO:function(e,t,n){"use strict";n.r(t),n.d(t,"ExampleTuiTextAreaModule",(function(){return le}));var o,a=n("An66"),r=n("3kIJ"),i=n("1VvW"),l=n("SVIu"),m=n("Qq0t"),d=n("dvRg"),s=n("Piem"),u=n("kZht"),c=n("LusI"),p=n("K/iL"),f=n("OZlg"),x=n("e0eB"),h=n("iyc4"),g=n("oEBb");o=$localize`:␟11fff1dadcae241490301e6b4ac6826c98d26022␟8176877427941181225: It has a fixed size and content scroll by default. But there is also an expandable mode with height increase from content inside
`;let T=(()=>{class e{constructor(){this.testForm=new r.FormGroup({testValue1:new r.FormControl("A field",r.Validators.required),testValue2:new r.FormControl("This one can be expanded",r.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=u["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-text-area-example-1"]],decls:10,vars:2,consts:[[1,"container",3,"formGroup"],[1,"tui-row"],[1,"tui-col_md-6"],["formControlName","testValue1"],["formControlName","testValue2",3,"expandable"]],template:function(e,t){1&e&&(u["\u0275\u0275elementStart"](0,"p"),u["\u0275\u0275i18n"](1,o),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](2,"form",0),u["\u0275\u0275elementStart"](3,"div",1),u["\u0275\u0275elementStart"](4,"div",2),u["\u0275\u0275elementStart"](5,"tui-text-area",3),u["\u0275\u0275text"](6," Type a text "),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](7,"div",2),u["\u0275\u0275elementStart"](8,"tui-text-area",4),u["\u0275\u0275text"](9," Type a text "),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"]()),2&e&&(u["\u0275\u0275advance"](2),u["\u0275\u0275property"]("formGroup",t.testForm),u["\u0275\u0275advance"](6),u["\u0275\u0275property"]("expandable",!0))},directives:[r["\u0275angular_packages_forms_forms_y"],r.NgControlStatusGroup,r.FormGroupDirective,g.a,r.NgControlStatus,r.FormControlName],styles:["[_nghost-%COMP%]{display:block}.container[_ngcontent-%COMP%]{margin-bottom:1.25rem;max-width:43.75rem}"],changeDetection:0}),e})();var C;C=$localize`:␟24c99562aed3fa3a2e251380380be625ceeaf326␟2874902685291106196:You can set a custom min-height for component`;let b=(()=>{class e{constructor(){this.testForm=new r.FormGroup({testValue1:new r.FormControl("A field",r.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=u["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-text-area-example-2"]],decls:9,vars:2,consts:[[3,"formGroup"],[1,"tui-row"],[1,"tui-col_md-6"],["formControlName","testValue1",1,"tui-space_bottom-4","field-large"],["formControlName","testValue1",1,"field-small",3,"expandable"]],template:function(e,t){1&e&&(u["\u0275\u0275elementStart"](0,"p"),u["\u0275\u0275i18n"](1,C),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](2,"form",0),u["\u0275\u0275elementStart"](3,"div",1),u["\u0275\u0275elementStart"](4,"div",2),u["\u0275\u0275elementStart"](5,"tui-text-area",3),u["\u0275\u0275text"](6," Type a text "),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](7,"tui-text-area",4),u["\u0275\u0275text"](8," Type a text "),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"]()),2&e&&(u["\u0275\u0275advance"](2),u["\u0275\u0275property"]("formGroup",t.testForm),u["\u0275\u0275advance"](5),u["\u0275\u0275property"]("expandable",!0))},directives:[r["\u0275angular_packages_forms_forms_y"],r.NgControlStatusGroup,r.FormGroupDirective,g.a,r.NgControlStatus,r.FormControlName],styles:[".field-large[_ngcontent-%COMP%]{min-height:9.375rem}.field-small[_ngcontent-%COMP%]{min-height:3.5rem}"],changeDetection:0}),e})();var y,S=n("1Nkj"),E=n("gEyt");y=$localize`:␟d79d1199bdb06711520d14b4a2ccc7357a9b44c2␟3036146691798610079: You can use label outside mode with ${"\ufffd#2\ufffd"}:START_TAG_CODE:tuiLabel${"\ufffd/#2\ufffd"}:CLOSE_TAG_CODE:`;let v=(()=>{class e{constructor(){this.testForm=new r.FormGroup({testValue1:new r.FormControl("A field",r.Validators.required)})}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=u["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-text-area-example-3"]],decls:6,vars:2,consts:[[1,"tui-row",3,"formGroup"],["tuiLabel","","label","Type a text",1,"tui-col_md-6"],["formControlName","testValue1",1,"tui-space_bottom-4",3,"tuiTextfieldLabelOutside"]],template:function(e,t){1&e&&(u["\u0275\u0275elementStart"](0,"p"),u["\u0275\u0275i18nStart"](1,y),u["\u0275\u0275element"](2,"code"),u["\u0275\u0275i18nEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](3,"form",0),u["\u0275\u0275elementStart"](4,"label",1),u["\u0275\u0275element"](5,"tui-text-area",2),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"]()),2&e&&(u["\u0275\u0275advance"](3),u["\u0275\u0275property"]("formGroup",t.testForm),u["\u0275\u0275advance"](2),u["\u0275\u0275property"]("tuiTextfieldLabelOutside",!0))},directives:[r["\u0275angular_packages_forms_forms_y"],r.NgControlStatusGroup,r.FormGroupDirective,S.a,g.a,r.NgControlStatus,r.FormControlName,E.b],styles:[".field[_ngcontent-%COMP%]{min-height:3.5rem}"],changeDetection:0}),e})();var _,L=n("RlDx"),w=n("KzL3"),F=n("kNZY");function V(e){return"Maximum length \u2014 "+e.requiredLength}_=$localize`:␟034801f919cc254ec896b67b2dfb1b78084d686a␟3652722326748330703: To highlight extra characters: ${"\ufffd#2\ufffd"}:START_UNORDERED_LIST:${"\ufffd#3\ufffd"}:START_LIST_ITEM: Set ${"[\ufffd#4\ufffd|\ufffd#6\ufffd]"}:START_TAG_CODE:tuiTextfieldMaxLength${"[\ufffd/#4\ufffd|\ufffd/#6\ufffd]"}:CLOSE_TAG_CODE:${"[\ufffd/#3\ufffd|\ufffd/#5\ufffd]"}:CLOSE_LIST_ITEM:${"\ufffd#5\ufffd"}:START_LIST_ITEM_1: (Optional) Dont forget to set form validator (for example, ${"[\ufffd#4\ufffd|\ufffd#6\ufffd]"}:START_TAG_CODE:Validators.maxLength${"[\ufffd/#4\ufffd|\ufffd/#6\ufffd]"}:CLOSE_TAG_CODE: ) if you want to make field invalid on exceeding the characters limit ${"[\ufffd/#3\ufffd|\ufffd/#5\ufffd]"}:CLOSE_LIST_ITEM:${"\ufffd/#2\ufffd"}:CLOSE_UNORDERED_LIST:`,_=u["\u0275\u0275i18nPostprocess"](_);let M=(()=>{class e{constructor(){this.maxLength=97,this.testForm=new r.FormGroup({testValue1:new r.FormControl("\nIn Java: everything is an object.\nIn Clojure: everything is a list.\nIn JavaScript: everything is a terrible mistake.\n".trim(),[r.Validators.required,r.Validators.maxLength(this.maxLength)])}),this.testForm.markAllAsTouched()}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=u["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-text-area-example-4"]],features:[u["\u0275\u0275ProvidersFeature"]([{provide:d.TUI_VALIDATION_ERRORS,useValue:{required:"Enter this!",maxlength:V}}])],decls:12,vars:4,consts:[[1,"description"],[1,"steps"],[1,"steps_optional"],[1,"form","tui-col_md-6",3,"formGroup"],["tuiLabel","","label","Write a wise thought",1,"tui-row"],["formControlName","testValue1","tuiHintContent","it's just a joke",3,"expandable","tuiTextfieldMaxLength","tuiTextfieldLabelOutside"],["formControlName","testValue1"]],template:function(e,t){1&e&&(u["\u0275\u0275elementStart"](0,"div",0),u["\u0275\u0275i18nStart"](1,_),u["\u0275\u0275elementStart"](2,"ul",1),u["\u0275\u0275elementStart"](3,"li"),u["\u0275\u0275element"](4,"code"),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](5,"li",2),u["\u0275\u0275element"](6,"code"),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275i18nEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](7,"form",3),u["\u0275\u0275elementStart"](8,"label",4),u["\u0275\u0275elementStart"](9,"tui-text-area",5),u["\u0275\u0275text"](10," Type it "),u["\u0275\u0275elementEnd"](),u["\u0275\u0275element"](11,"tui-field-error",6),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"]()),2&e&&(u["\u0275\u0275advance"](7),u["\u0275\u0275property"]("formGroup",t.testForm),u["\u0275\u0275advance"](2),u["\u0275\u0275property"]("expandable",!0)("tuiTextfieldMaxLength",t.maxLength)("tuiTextfieldLabelOutside",!0))},directives:[r["\u0275angular_packages_forms_forms_y"],r.NgControlStatusGroup,r.FormGroupDirective,S.a,g.a,r.NgControlStatus,r.FormControlName,L.a,w.b,E.b,F.a],styles:[".description[_ngcontent-%COMP%]{margin-bottom:2rem}.steps[_ngcontent-%COMP%]{list-style-type:disc;padding-left:.9375rem;margin:1rem 0}.steps_optional[_ngcontent-%COMP%]{list-style-type:circle}@media screen and (max-width:47.9375em){.form[_ngcontent-%COMP%]{width:100%}}"],changeDetection:0}),e})();var A=n("eB8V");let O=(()=>{class e{constructor(){this.value="\u0645\u0648\u0646\u062a\u0649 \u067e\u0627\u064a\u062b\u0648\u0646 \u0648 \u0633\u0627\u0639\u0627\u062a \u0645\u0639\u0631\u0648\u0641\u064a\u0646 \u0627\u0646\u0647\u0645 \u0630\u0649 \u067e\u0627\u064a\u062b\u0648\u0646\u0632 \u0643\u0627\u0646\u0648 \u0645\u062c\u0645\u0648\u0639\u0629 \u0643\u0648\u0645\u064a\u062f\u064a\u0627 \u0633\u0631\u064a\u0627\u0644\u064a\u0647 \u0645\u0646 \u0628\u0631\u064a\u0637\u0627\u0646\u064a\u0627"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=u["\u0275\u0275defineComponent"]({type:e,selectors:[["tui-text-area-example-5"]],decls:2,vars:3,consts:[["tuiHintContent","\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0634\u062e\u0635\u064a\u0647","tuiHintDirection","bottom-right",1,"input",3,"tuiTextfieldCleaner","tuiTextfieldMaxLength","ngModel","ngModelChange"]],template:function(e,t){1&e&&(u["\u0275\u0275elementStart"](0,"tui-text-area",0),u["\u0275\u0275listener"]("ngModelChange",(function(e){return t.value=e})),u["\u0275\u0275text"](1," \u0645\u0648\u0646\u062a\u0649 \u0628\u0627\u064a\u062b\u0648\u0646\n"),u["\u0275\u0275elementEnd"]()),2&e&&u["\u0275\u0275property"]("tuiTextfieldCleaner",!0)("tuiTextfieldMaxLength",100)("ngModel",t.value)},directives:[g.a,L.a,A.b,w.b,r.NgControlStatus,r.NgModel],styles:[".input[_ngcontent-%COMP%]{width:20rem;direction:rtl;text-align:right}"],changeDetection:0}),e})();var D=n("EPR0"),G=n("pQcr"),I=n("2wTY"),N=n("yHor"),P=n("zGJC"),$=n("FSyC"),R=n("u8jZ");const z=["header",$localize`:␟fd7489e11e93ebe443891acbd0f862676d1f0563␟3625945267826760454:TextArea`];var k;k=$localize`:␟d8e68a67668ed36e11149af4b05578aba184f2d8␟3415839972003360203:Textfield for multiline input. It can grow with its content.`;const H=["heading",$localize`:␟edc570a1a3344698bc10ae22435fcd850d8e1d5c␟947387158256125293:A simple field and expandable`],q=["heading",$localize`:␟a1516856d096185f3cd2e884d1c53927efe37878␟991068879248914444:Custom size`],U=["heading",$localize`:␟109f3df315d219bfc11667dd1c45293fef91d174␟4716735227862695980:With label outside`],j=["heading",$localize`:␟fea4a8a30133ed301fa9c3aa2501016eb2920272␟4290224686448141191:With extra characters highlight`],J=["heading",$localize`:␟e79e58f2fd2e2018afeb160923b2810951e9dbfc␟2885218428372331823:Direction: RTL`];function B(e,t){if(1&e&&(u["\u0275\u0275elementStart"](0,"p"),u["\u0275\u0275i18n"](1,k),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](2,"tui-doc-example",2),u["\u0275\u0275i18nAttributes"](3,H),u["\u0275\u0275element"](4,"tui-text-area-example-1"),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](5,"tui-doc-example",3),u["\u0275\u0275i18nAttributes"](6,q),u["\u0275\u0275element"](7,"tui-text-area-example-2"),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](8,"tui-doc-example",4),u["\u0275\u0275i18nAttributes"](9,U),u["\u0275\u0275element"](10,"tui-text-area-example-3"),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](11,"tui-doc-example",5),u["\u0275\u0275i18nAttributes"](12,j),u["\u0275\u0275element"](13,"tui-text-area-example-4"),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](14,"tui-doc-example",6),u["\u0275\u0275i18nAttributes"](15,J),u["\u0275\u0275element"](16,"tui-text-area-example-5"),u["\u0275\u0275elementEnd"]()),2&e){const e=u["\u0275\u0275nextContext"]();u["\u0275\u0275advance"](2),u["\u0275\u0275property"]("content",e.example1),u["\u0275\u0275advance"](3),u["\u0275\u0275property"]("content",e.example2),u["\u0275\u0275advance"](3),u["\u0275\u0275property"]("content",e.example3),u["\u0275\u0275advance"](3),u["\u0275\u0275property"]("content",e.example4),u["\u0275\u0275advance"](3),u["\u0275\u0275property"]("content",e.example5)}}var Y,W,X,Z,K,Q;function ee(e,t){1&e&&u["\u0275\u0275i18n"](0,Y)}function te(e,t){1&e&&u["\u0275\u0275i18n"](0,W)}function ne(e,t){1&e&&(u["\u0275\u0275i18nStart"](0,X),u["\u0275\u0275element"](1,"code"),u["\u0275\u0275i18nEnd"]())}function oe(e,t){if(1&e){const e=u["\u0275\u0275getCurrentView"]();u["\u0275\u0275elementStart"](0,"tui-doc-demo"),u["\u0275\u0275elementStart"](1,"tui-text-area",7),u["\u0275\u0275text"](2," Textfield for multiline input. It can grow with its content. "),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](3,"tui-doc-documentation"),u["\u0275\u0275template"](4,ee,1,0,"ng-template",8),u["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return u["\u0275\u0275restoreView"](e),u["\u0275\u0275nextContext"]().disabled=t})),u["\u0275\u0275template"](5,te,1,0,"ng-template",9),u["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return u["\u0275\u0275restoreView"](e),u["\u0275\u0275nextContext"]().expandable=t})),u["\u0275\u0275template"](6,ne,2,0,"ng-template",10),u["\u0275\u0275listener"]("documentationPropertyValueChange",(function(t){return u["\u0275\u0275restoreView"](e),u["\u0275\u0275nextContext"]().rows=t})),u["\u0275\u0275elementEnd"](),u["\u0275\u0275element"](7,"inherited-documentation")}if(2&e){const e=u["\u0275\u0275nextContext"]();u["\u0275\u0275advance"](1),u["\u0275\u0275property"]("formControl",e.control)("focusable",e.focusable)("tuiTextfieldCleaner",e.cleaner)("tuiTextfieldExampleText",e.exampleText)("tuiTextfieldLabelOutside",e.labelOutside)("tuiTextfieldMaxLength",e.maxLength)("tuiTextfieldSize",e.size)("expandable",e.expandable)("pseudoInvalid",e.pseudoInvalid)("pseudoFocused",e.pseudoFocused)("pseudoHovered",e.pseudoHovered)("readOnly",e.readOnly)("rows",e.rows)("tuiHintContent",e.hintContent)("tuiHintDirection",e.hintDirection)("tuiHintMode",e.hintMode),u["\u0275\u0275advance"](3),u["\u0275\u0275property"]("documentationPropertyValue",e.disabled),u["\u0275\u0275advance"](1),u["\u0275\u0275property"]("documentationPropertyValue",e.expandable),u["\u0275\u0275advance"](1),u["\u0275\u0275property"]("documentationPropertyValues",e.rowsVariants)("documentationPropertyValue",e.rows)}}function ae(e,t){if(1&e&&(u["\u0275\u0275elementStart"](0,"ol",11),u["\u0275\u0275elementStart"](1,"li"),u["\u0275\u0275elementStart"](2,"p"),u["\u0275\u0275i18nStart"](3,Z),u["\u0275\u0275element"](4,"code"),u["\u0275\u0275i18nEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275element"](5,"tui-doc-code",12),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](6,"li"),u["\u0275\u0275elementStart"](7,"p"),u["\u0275\u0275i18nStart"](8,K),u["\u0275\u0275element"](9,"code"),u["\u0275\u0275element"](10,"code"),u["\u0275\u0275i18nEnd"](),u["\u0275\u0275elementEnd"](),u["\u0275\u0275element"](11,"tui-doc-code",13),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementStart"](12,"li"),u["\u0275\u0275elementStart"](13,"p"),u["\u0275\u0275i18n"](14,Q),u["\u0275\u0275elementEnd"](),u["\u0275\u0275element"](15,"tui-doc-code",14),u["\u0275\u0275elementEnd"](),u["\u0275\u0275elementEnd"]()),2&e){const e=u["\u0275\u0275nextContext"]();u["\u0275\u0275advance"](5),u["\u0275\u0275property"]("code",e.exampleImportModule),u["\u0275\u0275advance"](6),u["\u0275\u0275property"]("code",e.exampleDeclareForm),u["\u0275\u0275advance"](4),u["\u0275\u0275property"]("code",e.exampleInsertTemplate)}}Y=$localize`:␟28350648cac40c192feced71459023195fd07d01␟9000685466486669878: Disabled state (formControl.disable()) `,W=$localize`:␟fe3440932d8de8493b95c5bb7b80235d8019c4e7␟8181128573063666297: Control height can be expanded to show all content `,X=$localize`:␟a96e8afcd84a7e13d809bf3cf105ae4fceb93ee3␟3033193110728465870: A number of visible rows in ${"\ufffd#1\ufffd"}:START_TAG_CODE:expandable${"\ufffd/#1\ufffd"}:CLOSE_TAG_CODE: mode `,Z=$localize`:␟aeec6378605dd6e8426702c0c1a0ac3534fb3376␟103194612379487642: Import ${"\ufffd#4\ufffd"}:START_TAG_CODE:TuiTextAreaModule${"\ufffd/#4\ufffd"}:CLOSE_TAG_CODE: into a module where you want to use our component `,K=$localize`:␟456424fe8e0d32d35e8189a73951290607573253␟6039324497180220606: Declare a form ( ${"[\ufffd#9\ufffd|\ufffd#10\ufffd]"}:START_TAG_CODE:FormGroup${"[\ufffd/#9\ufffd|\ufffd/#10\ufffd]"}:CLOSE_TAG_CODE: ) or a control ( ${"[\ufffd#9\ufffd|\ufffd#10\ufffd]"}:START_TAG_CODE:FormControl${"[\ufffd/#9\ufffd|\ufffd/#10\ufffd]"}:CLOSE_TAG_CODE: ) in your component: `,K=u["\u0275\u0275i18nPostprocess"](K),Q=$localize`:␟856efa24b2b203ad1c001649937b5c5738e38f97␟8042412267862615798:Add to the template:`;let re=(()=>{class e extends c.a{constructor(){super(...arguments),this.example1={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: 'tui-text-area-example-1',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTextAreaExample1 {\n    testForm = new FormGroup({\n        testValue1: new FormControl('A field', Validators.required),\n        testValue2: new FormControl('This one can be expanded', Validators.required),\n    });\n}\n",HTML:'<p i18n>\n    It has a fixed size and content scroll by default. But there is also an\n    expandable mode with height increase from content inside\n</p>\n\n<form class="container" [formGroup]="testForm">\n    <div class="tui-row">\n        <div class="tui-col_md-6">\n            <tui-text-area formControlName="testValue1">\n                Type a text\n            </tui-text-area>\n        </div>\n        <div class="tui-col_md-6">\n            <tui-text-area formControlName="testValue2" [expandable]="true">\n                Type a text\n            </tui-text-area>\n        </div>\n    </div>\n</form>\n',LESS:":host {\n    display: block;\n}\n\n.container {\n    margin-bottom: 1.25rem;\n    max-width: 43.75rem;\n}\n"},this.example2={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: 'tui-text-area-example-2',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTextAreaExample2 {\n    testForm = new FormGroup({\n        testValue1: new FormControl('A field', Validators.required),\n    });\n}\n",HTML:'<p i18n>You can set a custom min-height for component</p>\n\n<form [formGroup]="testForm">\n    <div class="tui-row">\n        <div class="tui-col_md-6">\n            <tui-text-area\n                formControlName="testValue1"\n                class="tui-space_bottom-4 field-large"\n            >\n                Type a text\n            </tui-text-area>\n            <tui-text-area\n                formControlName="testValue1"\n                class="field-small"\n                [expandable]="true"\n            >\n                Type a text\n            </tui-text-area>\n        </div>\n    </div>\n</form>\n',LESS:".field-large {\n    min-height: 9.375rem;\n}\n\n.field-small {\n    min-height: 3.5rem;\n}\n"},this.example3={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: 'tui-text-area-example-3',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTextAreaExample3 {\n    testForm = new FormGroup({\n        testValue1: new FormControl('A field', Validators.required),\n    });\n}\n",HTML:'<p i18n>\n    You can use label outside mode with\n    <code>tuiLabel</code>\n</p>\n\n<form class="tui-row" [formGroup]="testForm">\n    <label tuiLabel label="Type a text" class="tui-col_md-6">\n        <tui-text-area\n            formControlName="testValue1"\n            class="tui-space_bottom-4"\n            [tuiTextfieldLabelOutside]="true"\n        ></tui-text-area>\n    </label>\n</form>\n',LESS:".field {\n    min-height: 3.5rem;\n}\n"},this.example4={TypeScript:"import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\nimport {TUI_VALIDATION_ERRORS} from '@taiga-ui/kit';\n\nconst LONG_TEXT_EXAMPLE = `\nIn Java: everything is an object.\nIn Clojure: everything is a list.\nIn JavaScript: everything is a terrible mistake.\n`;\n\nexport function maxLengthMessageFactory(context: {requiredLength: string}): string {\n    return `Maximum length \u2014 ${context.requiredLength}`;\n}\n\n@Component({\n    selector: 'tui-text-area-example-4',\n    templateUrl: './index.html',\n    changeDetection,\n    encapsulation,\n    styleUrls: ['./index.less'],\n    providers: [\n        {\n            provide: TUI_VALIDATION_ERRORS,\n            useValue: {\n                required: 'Enter this!',\n                maxlength: maxLengthMessageFactory,\n            },\n        },\n    ],\n})\nexport class TuiTextAreaExample4 {\n    readonly maxLength = 97;\n\n    readonly testForm = new FormGroup({\n        testValue1: new FormControl(LONG_TEXT_EXAMPLE.trim(), [\n            Validators.required,\n            Validators.maxLength(this.maxLength),\n        ]),\n    });\n\n    constructor() {\n        this.testForm.markAllAsTouched();\n    }\n}\n",HTML:'<div i18n class="description">\n    To highlight extra characters:\n    <ul class="steps">\n        <li>\n            Set\n            <code>tuiTextfieldMaxLength</code>\n        </li>\n        <li class="steps_optional">\n            (Optional) Dont forget to set form validator (for example,\n            <code>Validators.maxLength</code>\n            ) if you want to make field invalid on exceeding the characters\n            limit\n        </li>\n    </ul>\n</div>\n\n<form class="form tui-col_md-6" [formGroup]="testForm">\n    <label tuiLabel label="Write a wise thought" class="tui-row">\n        <tui-text-area\n            formControlName="testValue1"\n            tuiHintContent="it\'s just a joke"\n            [expandable]="true"\n            [tuiTextfieldMaxLength]="maxLength"\n            [tuiTextfieldLabelOutside]="true"\n        >\n            Type it\n        </tui-text-area>\n        <tui-field-error formControlName="testValue1"></tui-field-error>\n    </label>\n</form>\n',LESS:"@import 'taiga-ui-local';\n\n.description {\n    margin-bottom: 2rem;\n}\n\n.steps {\n    list-style-type: disc;\n    padding-left: 0.9375rem;\n    margin: 1rem 0;\n\n    &_optional {\n        list-style-type: circle;\n    }\n}\n\n.form {\n    @media @mobile-m {\n        width: 100%;\n    }\n}\n"},this.example5={TypeScript:"import {Component} from '@angular/core';\nimport {changeDetection} from '@demo/emulate/change-detection';\nimport {encapsulation} from '@demo/emulate/encapsulation';\n\n@Component({\n    selector: 'tui-text-area-example-5',\n    templateUrl: './index.html',\n    styleUrls: ['./index.less'],\n    changeDetection,\n    encapsulation,\n})\nexport class TuiTextAreaExample5 {\n    value =\n        '\u0645\u0648\u0646\u062a\u0649 \u067e\u0627\u064a\u062b\u0648\u0646 \u0648 \u0633\u0627\u0639\u0627\u062a \u0645\u0639\u0631\u0648\u0641\u064a\u0646 \u0627\u0646\u0647\u0645 \u0630\u0649 \u067e\u0627\u064a\u062b\u0648\u0646\u0632 \u0643\u0627\u0646\u0648 \u0645\u062c\u0645\u0648\u0639\u0629 \u0643\u0648\u0645\u064a\u062f\u064a\u0627 \u0633\u0631\u064a\u0627\u0644\u064a\u0647 \u0645\u0646 \u0628\u0631\u064a\u0637\u0627\u0646\u064a\u0627';\n}\n",HTML:'<tui-text-area\n    tuiHintContent="\u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0634\u062e\u0635\u064a\u0647"\n    tuiHintDirection="bottom-right"\n    class="input"\n    [tuiTextfieldCleaner]="true"\n    [tuiTextfieldMaxLength]="100"\n    [(ngModel)]="value"\n>\n    \u0645\u0648\u0646\u062a\u0649 \u0628\u0627\u064a\u062b\u0648\u0646\n</tui-text-area>\n',LESS:".input {\n    width: 20rem;\n    direction: rtl;\n    text-align: right;\n}\n"},this.exampleImportModule="import {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TuiTextAreaModule} from '@taiga-ui/kit';\n\n...\n\n@NgModule({\n    imports: [\n        ...\n        FormsModule,\n        ReactiveFormsModule,\n        TuiTextAreaModule\n    ],\n...\n",this.exampleInsertTemplate='<div [formGroup]="testForm">\n    <tui-text-area formControlName="testValue"\n                   [expandable]="true"\n                   [rows]="10"></tui-text-area>\n</div>\n',this.exampleDeclareForm="import {FormControl, FormGroup} from '@angular/forms';\n\n...\n\n@Component({\n    ...\n})\nexport class MyComponent {\n    testForm = new FormGroup({\n        testValue: new FormControl('Content')\n    });\n}\n",this.maxLengthVariants=[50,100,500],this.maxLength=null,this.rowsVariants=[8,15,30],this.rows=this.rowsVariants[0],this.expandable=!1,this.control=new r.FormControl,this.sizeVariants=["m","l"],this.size=this.sizeVariants[1]}}return e.\u0275fac=function(t){return ie(t||e)},e.\u0275cmp=u["\u0275\u0275defineComponent"]({type:e,selectors:[["example-tui-text-area"]],features:[u["\u0275\u0275ProvidersFeature"]([{provide:p.a,useExisting:Object(u.forwardRef)(()=>e)}]),u["\u0275\u0275InheritDefinitionFeature"]],decls:5,vars:0,consts:[["package","KIT","type","components",6,"header"],["pageTab",""],["id","base",3,"content",6,"heading"],["id","large",3,"content",6,"heading"],["id","label-outside",3,"content",6,"heading"],["id","extra-chars-highlight",3,"content",6,"heading"],["id","rtl",3,"content",6,"heading"],[1,"b-form",3,"formControl","focusable","tuiTextfieldCleaner","tuiTextfieldExampleText","tuiTextfieldLabelOutside","tuiTextfieldMaxLength","tuiTextfieldSize","expandable","pseudoInvalid","pseudoFocused","pseudoHovered","readOnly","rows","tuiHintContent","tuiHintDirection","tuiHintMode"],["documentationPropertyName","disabled","documentationPropertyMode","input","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","expandable","documentationPropertyMode","input","documentationPropertyType","boolean",3,"documentationPropertyValue","documentationPropertyValueChange"],["documentationPropertyName","rows","documentationPropertyMode","input","documentationPropertyType","number",3,"documentationPropertyValues","documentationPropertyValue","documentationPropertyValueChange"],[1,"b-demo-steps"],["filename","myComponent.module.ts",3,"code"],["filename","myComponent.component.ts",3,"code"],["filename","myComponent.template.html",3,"code"]],template:function(e,t){1&e&&(u["\u0275\u0275elementStart"](0,"tui-doc-page",0),u["\u0275\u0275i18nAttributes"](1,z),u["\u0275\u0275template"](2,B,17,5,"ng-template",1),u["\u0275\u0275template"](3,oe,8,20,"ng-template",1),u["\u0275\u0275template"](4,ae,16,3,"ng-template",1),u["\u0275\u0275elementEnd"]())},directives:[f.a,x.a,h.a,T,b,v,M,O,D.a,g.a,r.NgControlStatus,r.FormControlDirective,A.b,G.b,E.b,w.b,I.b,L.a,N.a,P.a,$.a,R.a],encapsulation:2,changeDetection:0}),e})();const ie=u["\u0275\u0275getInheritedFactory"](re);let le=(()=>{class e{}return e.\u0275mod=u["\u0275\u0275defineNgModule"]({type:e}),e.\u0275inj=u["\u0275\u0275defineInjector"]({factory:function(t){return new(t||e)},imports:[[d.TuiTextAreaModule,l.h,s.a,r.ReactiveFormsModule,r.FormsModule,m.TuiSvgModule,a.c,d.TuiRadioListModule,m.TuiButtonModule,m.TuiLinkModule,m.TuiLabelModule,m.TuiTextfieldControllerModule,m.TuiHintControllerModule,d.TuiFieldErrorModule,i.f.forChild(Object(l.o)(re))]]}),e})()}}]);